# This file is the main config file for this service.
# Docs: https://docs.serverless.com
# Example: https://serverless.com/framework/docs/providers/aws/guide/serverless.yml/

service: photato-website-backend

# The app and org for use with https://dashboard.serverless.com
app: photato-website
org: veszelovszki

# This is the basic setup I think
provider:
  name: aws
  runtime: nodejs12.x
  stage: production
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource:
        - arn:aws:logs:us-east-1:*:* # Allow replicated lambdas to create logs
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
        - s3:ListBucket
        - s3:ListBucketVersions
      Resource:
        - 'arn:aws:s3:::${self:custom.config.bucket.name}'
        - 'arn:aws:s3:::${self:custom.config.bucket.name}/*'

# These are the lambda functions and their location in this repo, plus also how to call them from Lambda@Edge
functions:
  get-signed-url:
    handler: photos/get-signed-url/getSignedUrl.handler
    memorySize: 128
    timeout: 5
    lambdaAtEdge:
      distribution: CloudFront
      eventType: viewer-request # Help: https://docs.aws.amazon.com/lambda/latest/dg/lambda-edge.html
      pathPattern: '/get-signed-url'
  validate-signed-url:
    handler: photos/validate-signed-url/validateSignedUrl.handler
    memorySize: 128
    timeout: 5
    lambdaAtEdge:
      distribution: CloudFront
      eventType: viewer-request
  list-photos:
    handler: photos/list-photos/listPhotos.handler
    memorySize: 128
    timeout: 5
    lambdaAtEdge:
      distribution: CloudFront
      eventType: viewer-request
      pathPattern: '/list-photos'
  get-photo:
    handler: photos/getImageFromS3.handler
    memorySize: 128
    timeout: 5
    lambdaAtEdge:
      distribution: CloudFront
      eventType: viewer-request
      pathPattern: '/get-photo'

# Plugins for extended functions, such as Lambda@Edge use
plugins:
  - '@silvermine/serverless-plugin-cloudfront-lambda-edge' # This allows using Lamda@Edge features of CloudFront.
    # More info: https://github.com/silvermine/serverless-plugin-cloudfront-lambda-edge

# Any custom settings may come here. They can be referenced as ${self:custom.XXX}
custom:
  stage: ${opt:stage, self:provider.stage}
  config: ${file(./config.json)} # Lambda@Edge doesn't support environmental variables, so we put them in this JSON

# you can add CloudFormation resource templates here
resources:
  Resources:
    PhotoBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.config.bucket.name}
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
        VersioningConfiguration:
          Status: Enabled
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders: ['*']
              AllowedMethods: [GET, PUT]
              AllowedOrigins: ['*']
              Id: CORSRuleId1
              MaxAge: '3600'
    CloudFront:
      Type: AWS::CloudFront::Distribution
      DependsOn: PhotoBucket
      Properties:
        DistributionConfig:
          Enabled: true
          Comment: '${self:custom.stage}-${self:service}'
          PriceClass: PriceClass_All # TODO: Maybe PriceClass_100 would be better? No idea, but I'm on the free tier ATM
          HttpVersion: http2
          IPV6Enabled: true
          ViewerCertificate:
            CloudFrontDefaultCertificate: true
          CustomErrorResponses:
            - ErrorCachingMinTTL: 0
              ErrorCode: 400
            - ErrorCachingMinTTL: 0
              ErrorCode: 403
            - ErrorCachingMinTTL: 0
              ErrorCode: 404
            - ErrorCachingMinTTL: 0
              ErrorCode: 405
            - ErrorCachingMinTTL: 0
              ErrorCode: 414
            - ErrorCachingMinTTL: 0
              ErrorCode: 416
            - ErrorCachingMinTTL: 0
              ErrorCode: 500
            - ErrorCachingMinTTL: 0
              ErrorCode: 501
            - ErrorCachingMinTTL: 0
              ErrorCode: 502
            - ErrorCachingMinTTL: 0
              ErrorCode: 503
            - ErrorCachingMinTTL: 0
              ErrorCode: 504
          Origins:
            - DomainName: ${self:custom.config.bucket.name}.s3.amazonaws.com
              Id: S3Origin
              S3OriginConfig: {}
          DefaultCacheBehavior:
            TargetOriginId: S3Origin
            ViewerProtocolPolicy: redirect-to-https
            DefaultTTL: 0
            MaxTTL: 0
            MinTTL: 0
            ForwardedValues:
              QueryString: 'true'
              Cookies:
                Forward: none
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
          CacheBehaviors:
            - TargetOriginId: S3Origin
              ViewerProtocolPolicy: redirect-to-https
              DefaultTTL: 0
              MaxTTL: 0
              MinTTL: 0
              ForwardedValues:
                QueryString: 'false'
                Cookies:
                  Forward: none
              PathPattern: '/get-signed-url'
              AllowedMethods:
                - GET
                - HEAD
            - TargetOriginId: S3Origin
              ViewerProtocolPolicy: redirect-to-https
              DefaultTTL: 0
              MaxTTL: 0
              MinTTL: 0
              ForwardedValues:
                QueryString: 'false'
                Cookies:
                  Forward: none
              PathPattern: '/list-photos'
              AllowedMethods:
                - GET
                - HEAD
            - TargetOriginId: S3Origin
              ViewerProtocolPolicy: redirect-to-https
              DefaultTTL: 0
              MaxTTL: 0
              MinTTL: 0
              ForwardedValues:
                QueryString: 'false'
                Cookies:
                  Forward: none
              PathPattern: '/get-photo'
              AllowedMethods:
                - GET
                - HEAD